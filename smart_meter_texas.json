[
    {
        "id": "929f749.9a8e088",
        "type": "tab",
        "label": "Smart Meter Texas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "771e4a20.c20514",
        "type": "inject",
        "z": "929f749.9a8e088",
        "name": "Retrieve Reading",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1.0",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "b4a08a36.ed3d28"
            ]
        ]
    },
    {
        "id": "127b6780.428209",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "Apply HTTP Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "resultjson",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.authorization",
                "pt": "msg",
                "to": "token",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 460,
        "wires": [
            [
                "249a6368.66488c"
            ]
        ]
    },
    {
        "id": "249a6368.66488c",
        "type": "https-node",
        "z": "929f749.9a8e088",
        "name": "Get Reading",
        "method": "POST",
        "ret": "obj",
        "url": "https://smartmetertexas.com/api/usage/latestodrread",
        "authorized": false,
        "agent": true,
        "x": 730,
        "y": 460,
        "wires": [
            [
                "7d434497.c7749c",
                "8d612168.e1659"
            ]
        ]
    },
    {
        "id": "7d434497.c7749c",
        "type": "switch",
        "z": "929f749.9a8e088",
        "name": "Status Complete",
        "property": "payload.data.odrstatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "COMPLETED",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 480,
        "wires": [
            [
                "7535014c.e577e"
            ]
        ]
    },
    {
        "id": "b786c9dd.07fee8",
        "type": "inject",
        "z": "929f749.9a8e088",
        "name": "Authenticate",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "5c62a92d.f21fa8"
            ]
        ]
    },
    {
        "id": "5c62a92d.f21fa8",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "Apply HTTP Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "authjson",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "9427c6ff.f38008"
            ]
        ]
    },
    {
        "id": "9427c6ff.f38008",
        "type": "https-node",
        "z": "929f749.9a8e088",
        "name": "Log In",
        "method": "POST",
        "ret": "obj",
        "url": "https://smartmetertexas.com/api/user/authenticate",
        "authorized": false,
        "agent": true,
        "x": 470,
        "y": 260,
        "wires": [
            [
                "39c9b506.c8939a",
                "3e12925e.9ffe2e"
            ]
        ]
    },
    {
        "id": "84da5499.b9e438",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 280,
        "wires": [
            [
                "5283b16c.03e11"
            ]
        ]
    },
    {
        "id": "3e12925e.9ffe2e",
        "type": "debug",
        "z": "929f749.9a8e088",
        "name": "Debug: Login",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 620,
        "y": 240,
        "wires": []
    },
    {
        "id": "39c9b506.c8939a",
        "type": "function",
        "z": "929f749.9a8e088",
        "name": "Add Bearer",
        "func": "msg.payload = \"bearer \" + msg.payload.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "84da5499.b9e438"
            ]
        ]
    },
    {
        "id": "6af11ada.e98ba4",
        "type": "config",
        "z": "929f749.9a8e088",
        "name": "Configuration",
        "properties": [
            {
                "p": "username",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "p": "password",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "p": "esiid",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "p": "meternumber",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "p": "pollminute",
                "pt": "flow",
                "to": "50",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "e341e361.0f889",
        "type": "inject",
        "z": "929f749.9a8e088",
        "name": "Build JSON",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "fbbe0ce4.21a56",
                "c84887a1.a68038",
                "67b8b4a9.34938c"
            ]
        ]
    },
    {
        "id": "fbbe0ce4.21a56",
        "type": "function",
        "z": "929f749.9a8e088",
        "name": "Create Login JSON",
        "func": "var values = flow.get([\"username\", \"password\"]);\n\nmsg.payload = {\n  \"username\": values[0],\n  \"password\": values[1],\n  \"rememberMe\": \"true\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "efa7b6c7.3be5d8"
            ]
        ]
    },
    {
        "id": "c84887a1.a68038",
        "type": "function",
        "z": "929f749.9a8e088",
        "name": "Create Read Request JSON",
        "func": "var values = flow.get([\"esiid\", \"meternumber\"]);\n\nmsg.payload = {\n  \"ESIID\": values[0],\n  \"MeterNumber\": values[1]\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "574028a3.921758"
            ]
        ]
    },
    {
        "id": "67b8b4a9.34938c",
        "type": "function",
        "z": "929f749.9a8e088",
        "name": "Create Read Result JSON",
        "func": "var values = flow.get([\"esiid\"]);\n\nmsg.payload = {\n  \"ESIID\": values[0]\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 180,
        "wires": [
            [
                "c9b46ae2.dd9d58"
            ]
        ]
    },
    {
        "id": "b4a08a36.ed3d28",
        "type": "switch",
        "z": "929f749.9a8e088",
        "name": "Waiting for Response",
        "property": "readrequested",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 460,
        "wires": [
            [
                "127b6780.428209"
            ]
        ]
    },
    {
        "id": "7535014c.e577e",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "Not Waiting for Response",
        "rules": [
            {
                "t": "set",
                "p": "readrequested",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 480,
        "wires": [
            [
                "cc29a088.fcd1a"
            ]
        ]
    },
    {
        "id": "fd789879.dd6f08",
        "type": "mqtt out",
        "z": "929f749.9a8e088",
        "name": "MQTT: Send Reading",
        "topic": "smt/reading",
        "qos": "",
        "retain": "true",
        "broker": "",
        "x": 1540,
        "y": 500,
        "wires": []
    },
    {
        "id": "cc29a088.fcd1a",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "Parse Reading",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.odrread",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 480,
        "wires": [
            [
                "fd789879.dd6f08",
                "589d30ac.c14f6"
            ]
        ]
    },
    {
        "id": "65a100aa.7aa08",
        "type": "inject",
        "z": "929f749.9a8e088",
        "name": "Read Meter",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "9c3d0ef4.effb3"
            ]
        ]
    },
    {
        "id": "e9933680.4df1b8",
        "type": "https-node",
        "z": "929f749.9a8e088",
        "name": "Request Read",
        "method": "POST",
        "ret": "obj",
        "url": "https://smartmetertexas.com/api/ondemandread",
        "authorized": false,
        "agent": true,
        "x": 760,
        "y": 360,
        "wires": [
            [
                "22fb4178.fb9d9e",
                "5c1270d5.37835"
            ]
        ]
    },
    {
        "id": "efa7b6c7.3be5d8",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "authjson",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "574028a3.921758",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "readjson",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c9b46ae2.dd9d58",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resultjson",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "22fb4178.fb9d9e",
        "type": "switch",
        "z": "929f749.9a8e088",
        "name": "Request Good",
        "property": "payload.data.statusReason",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Request submitted successfully for further processing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 940,
        "y": 380,
        "wires": [
            [
                "1bad1fe2.a8d68"
            ]
        ]
    },
    {
        "id": "1bad1fe2.a8d68",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "Waiting for Response",
        "rules": [
            {
                "t": "set",
                "p": "readrequested",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8d612168.e1659",
        "type": "debug",
        "z": "929f749.9a8e088",
        "name": "Debug: Get Reading",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 920,
        "y": 440,
        "wires": []
    },
    {
        "id": "bb3a805c.32b0a",
        "type": "change",
        "z": "929f749.9a8e088",
        "name": "Apply HTTP Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "readjson",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.authorization",
                "pt": "msg",
                "to": "token",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e9933680.4df1b8"
            ]
        ]
    },
    {
        "id": "5c1270d5.37835",
        "type": "debug",
        "z": "929f749.9a8e088",
        "name": "Debug: Read Meter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 960,
        "y": 340,
        "wires": []
    },
    {
        "id": "5283b16c.03e11",
        "type": "debug",
        "z": "929f749.9a8e088",
        "name": "Debug: Auth Token",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 970,
        "y": 280,
        "wires": []
    },
    {
        "id": "589d30ac.c14f6",
        "type": "debug",
        "z": "929f749.9a8e088",
        "name": "Debug: Last Reading",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1540,
        "y": 460,
        "wires": []
    },
    {
        "id": "bee6516a.32c51",
        "type": "rbe",
        "z": "929f749.9a8e088",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "bb3a805c.32b0a"
            ]
        ]
    },
    {
        "id": "9c3d0ef4.effb3",
        "type": "function",
        "z": "929f749.9a8e088",
        "name": "Check Time",
        "func": "var date = new Date();\nvar minute = (\"0\"+date.getMinutes()).substr(-2);\nvar hour = (\"0\"+date.getHours()).substr(-2);\n\nvar values = flow.get([\"pollminute\"]);\nvar poll = values[0];\n\nif (minute == poll){\n    return { payload : hour };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 360,
        "wires": [
            [
                "bee6516a.32c51"
            ]
        ]
    }
]