[
    {
        "id": "16a48968.aea6b7",
        "type": "tab",
        "label": "Smart Meter Texas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9e0cdc70.c3581",
        "type": "inject",
        "z": "16a48968.aea6b7",
        "name": "Retrieve Reading",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1.0",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "a6824cfe.8985b"
            ]
        ]
    },
    {
        "id": "94a78438.8a8328",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "Apply HTTP Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "resultjson",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.authorization",
                "pt": "msg",
                "to": "token",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "5a26c4a1.c10c6c"
            ]
        ]
    },
    {
        "id": "5a26c4a1.c10c6c",
        "type": "https-node",
        "z": "16a48968.aea6b7",
        "name": "Get Reading",
        "method": "POST",
        "ret": "obj",
        "url": "https://smartmetertexas.com/api/usage/latestodrread",
        "authorized": false,
        "agent": true,
        "x": 750,
        "y": 460,
        "wires": [
            [
                "e23f0059.9a102",
                "ad2e1fec.cc353"
            ]
        ]
    },
    {
        "id": "e23f0059.9a102",
        "type": "switch",
        "z": "16a48968.aea6b7",
        "name": "Status Complete",
        "property": "payload.data.odrstatus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "COMPLETED",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "10f6f3a3.0bfc4c"
            ]
        ]
    },
    {
        "id": "58c775c2.65129c",
        "type": "inject",
        "z": "16a48968.aea6b7",
        "name": "Authenticate",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "23d2a357.e5208c"
            ]
        ]
    },
    {
        "id": "8eea7068.95c6c",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "Apply HTTP Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "authjson",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 260,
        "wires": [
            [
                "c7deb224.1fdac"
            ]
        ]
    },
    {
        "id": "c7deb224.1fdac",
        "type": "https-node",
        "z": "16a48968.aea6b7",
        "name": "Log In",
        "method": "POST",
        "ret": "obj",
        "url": "https://smartmetertexas.com/api/user/authenticate",
        "authorized": false,
        "agent": true,
        "x": 770,
        "y": 260,
        "wires": [
            [
                "f4a4c08f.8fee1",
                "b26cdce9.bd958"
            ]
        ]
    },
    {
        "id": "10a0c91.7ccad37",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "6de863e9.3ff2fc"
            ]
        ]
    },
    {
        "id": "b26cdce9.bd958",
        "type": "debug",
        "z": "16a48968.aea6b7",
        "name": "Debug: Login",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 920,
        "y": 240,
        "wires": []
    },
    {
        "id": "f4a4c08f.8fee1",
        "type": "function",
        "z": "16a48968.aea6b7",
        "name": "Add Bearer",
        "func": "msg.payload = \"bearer \" + msg.payload.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 280,
        "wires": [
            [
                "10a0c91.7ccad37"
            ]
        ]
    },
    {
        "id": "55ee088.28608f8",
        "type": "config",
        "z": "16a48968.aea6b7",
        "name": "Configuration",
        "properties": [
            {
                "p": "pollminute",
                "pt": "flow",
                "to": "50",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "7160af01.c48f3",
        "type": "inject",
        "z": "16a48968.aea6b7",
        "name": "Build JSON",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "48306e8e.ab66f"
            ]
        ]
    },
    {
        "id": "cf432977.2b76b8",
        "type": "function",
        "z": "16a48968.aea6b7",
        "name": "Create Login JSON",
        "func": "msg.payload = {\n  \"username\": msg.username,\n  \"password\": msg.password,\n  \"rememberMe\": \"true\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "12273b0b.a98cd5"
            ]
        ]
    },
    {
        "id": "bee08201.c7d62",
        "type": "function",
        "z": "16a48968.aea6b7",
        "name": "Create Read Request JSON",
        "func": "msg.payload = {\n  \"ESIID\": msg.esiid,\n  \"MeterNumber\": msg.meternumber\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "8ec6ffdb.13c4b"
            ]
        ]
    },
    {
        "id": "677aa62e.4af098",
        "type": "function",
        "z": "16a48968.aea6b7",
        "name": "Create Read Result JSON",
        "func": "var values = flow.get([\"esiid\"]);\n\nmsg.payload = {\n  \"ESIID\": msg.esiid\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 180,
        "wires": [
            [
                "a7d6aa76.c66b38"
            ]
        ]
    },
    {
        "id": "a6824cfe.8985b",
        "type": "switch",
        "z": "16a48968.aea6b7",
        "name": "Waiting for Response",
        "property": "readrequested",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 460,
        "wires": [
            [
                "94a78438.8a8328"
            ]
        ]
    },
    {
        "id": "10f6f3a3.0bfc4c",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "Not Waiting for Response",
        "rules": [
            {
                "t": "set",
                "p": "readrequested",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "f6641b8d.bdfa88"
            ]
        ]
    },
    {
        "id": "2048df2d.582db",
        "type": "mqtt out",
        "z": "16a48968.aea6b7",
        "name": "MQTT: Send Reading",
        "topic": "smt/reading",
        "qos": "",
        "retain": "true",
        "broker": "",
        "x": 1560,
        "y": 500,
        "wires": []
    },
    {
        "id": "f6641b8d.bdfa88",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "Parse Reading",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.odrread",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 480,
        "wires": [
            [
                "2048df2d.582db",
                "e080095e.63ca18"
            ]
        ]
    },
    {
        "id": "e6ca1a61.e6a1b8",
        "type": "inject",
        "z": "16a48968.aea6b7",
        "name": "Read Meter",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "164b7d9.7ce1982"
            ]
        ]
    },
    {
        "id": "71b0b0c2.cbc1d",
        "type": "https-node",
        "z": "16a48968.aea6b7",
        "name": "Request Read",
        "method": "POST",
        "ret": "obj",
        "url": "https://smartmetertexas.com/api/ondemandread",
        "authorized": false,
        "agent": true,
        "x": 780,
        "y": 360,
        "wires": [
            [
                "3fff322e.9ee70e",
                "224a6869.ff61d8"
            ]
        ]
    },
    {
        "id": "12273b0b.a98cd5",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "authjson",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8ec6ffdb.13c4b",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "readjson",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a7d6aa76.c66b38",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resultjson",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3fff322e.9ee70e",
        "type": "switch",
        "z": "16a48968.aea6b7",
        "name": "Request Good",
        "property": "payload.data.statusReason",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Request submitted successfully for further processing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 960,
        "y": 380,
        "wires": [
            [
                "64edb1fa.23ddc"
            ]
        ]
    },
    {
        "id": "64edb1fa.23ddc",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "Waiting for Response",
        "rules": [
            {
                "t": "set",
                "p": "readrequested",
                "pt": "flow",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ad2e1fec.cc353",
        "type": "debug",
        "z": "16a48968.aea6b7",
        "name": "Debug: Get Reading",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "bbf4aae4.b2cbc8",
        "type": "change",
        "z": "16a48968.aea6b7",
        "name": "Apply HTTP Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "readjson",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.authorization",
                "pt": "msg",
                "to": "token",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "71b0b0c2.cbc1d"
            ]
        ]
    },
    {
        "id": "224a6869.ff61d8",
        "type": "debug",
        "z": "16a48968.aea6b7",
        "name": "Debug: Read Meter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 980,
        "y": 340,
        "wires": []
    },
    {
        "id": "6de863e9.3ff2fc",
        "type": "debug",
        "z": "16a48968.aea6b7",
        "name": "Debug: Auth Token",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1270,
        "y": 280,
        "wires": []
    },
    {
        "id": "e080095e.63ca18",
        "type": "debug",
        "z": "16a48968.aea6b7",
        "name": "Debug: Last Reading",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1560,
        "y": 460,
        "wires": []
    },
    {
        "id": "ddbeb02.59b285",
        "type": "rbe",
        "z": "16a48968.aea6b7",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "bbf4aae4.b2cbc8"
            ]
        ]
    },
    {
        "id": "164b7d9.7ce1982",
        "type": "function",
        "z": "16a48968.aea6b7",
        "name": "Check Time",
        "func": "var date = new Date();\nvar minute = (\"0\"+date.getMinutes()).substr(-2);\nvar hour = (\"0\"+date.getHours()).substr(-2);\n\nvar values = flow.get([\"pollminute\"]);\nvar poll = values[0];\n\nif (minute == poll){\n    return { payload : hour };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "ddbeb02.59b285"
            ]
        ]
    },
    {
        "id": "23d2a357.e5208c",
        "type": "function",
        "z": "16a48968.aea6b7",
        "name": "Check Time",
        "func": "var date = new Date();\nvar minute = (\"0\"+date.getMinutes()).substr(-2);\nvar hour = (\"0\"+date.getHours()).substr(-2);\n\nvar values = flow.get([\"pollminute\"]);\nvar poll = values[0];\n\nif (minute == poll - 1){\n    return { payload : hour };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "2d1b0107.9d202e"
            ]
        ]
    },
    {
        "id": "2d1b0107.9d202e",
        "type": "rbe",
        "z": "16a48968.aea6b7",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "8eea7068.95c6c"
            ]
        ]
    },
    {
        "id": "48306e8e.ab66f",
        "type": "credentials",
        "z": "16a48968.aea6b7",
        "name": "Credentials",
        "props": [
            {
                "value": "username",
                "type": "msg"
            },
            {
                "value": "password",
                "type": "msg"
            },
            {
                "value": "esiid",
                "type": "msg"
            },
            {
                "value": "meternumber",
                "type": "msg"
            }
        ],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "cf432977.2b76b8",
                "bee08201.c7d62",
                "677aa62e.4af098"
            ]
        ]
    }
]